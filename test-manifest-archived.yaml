archived: true

builder:
  os: windows
  track: windowsservercore-1809

labels:
  app: estafette-ci-builder
  team: estafette-team
  language: golang

version:
  semver:
    major: 1
    minor: 2
    patch: '{{auto}}'
    labelTemplate: '{{branch}}'
    releaseBranch: main

env:
  VAR_A: Greetings
  VAR_B: World

# automatically executed stages on a push to the repository
stages:
  build:
    image: golang:1.8.0-alpine
    workDir: /go/src/github.com/estafette/estafette-ci-builder
    commands:
    - go test -v ./...
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o ./publish/estafette-ci-builder .

  bake:
    image: docker:17.03.0-ce
    shell: /bin/bash
    commands:
    - cp Dockerfile ./publish
    - docker build -t estafette-ci-builder ./publish

  set-build-status:
    image: extensions/github-status:0.0.2
    when:
      server == 'estafette'

  push-to-docker-hub:
    image: docker:17.03.0-ce
    retries: 5
    commands:
    - docker login --username=${ESTAFETTE_DOCKER_HUB_USERNAME} --password='${ESTAFETTE_DOCKER_HUB_PASSWORD}'
    - docker push estafette/${ESTAFETTE_LABEL_APP}:${ESTAFETTE_BUILD_VERSION}
    when:
      status == 'succeeded' &&
      branch == 'main'

  slack-notify:
    image: docker:17.03.0-ce
    env:
      SOME_ENVIRONMENT_VAR: "some value with spaces"
    commands:
    - 'curl -X POST --data-urlencode ''payload={"channel": "#build-status", "username": "estafette-ci-builder", "text": "Build ${ESTAFETTE_BUILD_VERSION} for ${ESTAFETTE_LABEL_APP} has failed!"}'' ${ESTAFETTE_SLACK_WEBHOOK}'
    when:
      status == 'failed' ||
      branch == 'main'
    unknownProperty1: value1
    unknownProperty2: value2
    unknownProperty3:
      - supported1
      - supported2

  test-alpha-version:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.15
      env:
        SOME_ENVIRONMENT_VAR: "some value with spaces"
      readiness:
        path: /kubernetes-ready
        timeoutSeconds: 60
        port: 80
        protocol: http
        hostname: kubernetes.kube-system.svc.cluster.local
    - name: database
      image: cockroachdb/cockroach:v19.1.5
      commands:
      - cockroachdb start --insecure --listen-addr=localhost
    image: extensions/gke:${ESTAFETTE_BUILD_VERSION}
    retries: 1
    credentials: gke-tooling
    app: gke
    namespace: estafette
    visibility: private
    container:
      repository: extensions
      name: gke
      tag: alpha
    cpu:
      request: 100m
      limit: 100m
    memory:
      request: 256Mi
      limit: 256Mi
    dryrun: true

  parallel-stages-group:
    parallelStages:
      stageA:
        image: docker
      stageB:
        image: docker

# releases are automatically triggered from stages or manually from gui, cli or slack
releases:
  docker-hub:
    stages:
      push-image:
        image: extensions/push-to-docker-registry:dev

  beta:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: gke
        repositories:
        - extensions
        tags:
        - beta

  development:
    builder:
      track: stable
      os: linux
    stages:
      deploy:
        image: extensions/deploy-to-kubernetes-engine:dev

  staging:
    stages:
      deploy:
        image: extensions/gke:beta
        volumemounts:
        - name: client-certs
          mountpath: /cockroach-certs
          volume:
            secret:
              secretName: estafette.client.estafette
              items:
              - key: key
                path: key
                mode: 600
                enabled: true
              - key: cert
                path: cert

      parallel-stages-group:
        parallelStages:
          stageA:
            image: docker
          stageB:
            image: docker

  production:
    actions:
    - name: deploy-canary
    - name: rollback-canary
    - name: deploy-stable

    clone: true
    stages:
      deploy:
        image: extensions/deploy-to-kubernetes-engine:stable

      create-release-notes:
        image: extensions/create-release-notes-from-changelog:stable

  tooling: